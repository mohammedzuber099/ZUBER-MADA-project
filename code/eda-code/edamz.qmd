---
title: "Exploratory analysis script"
date: "2024-02-20"
output: html_document
---

The purpose of this script is to conduct an exploratory analysis of the given dataset. This involves summarizing key variables, identifying patterns, and visualizing data distributions. The analysis will help in understanding the datasetâ€™s structure, detecting anomalies, and forming preliminary insights for further modeling or hypothesis testing.

```{r}
#load needed packages. make sure they are installed.
library(here) #for data loading/saving
library(dplyr)
library(skimr)
library(ggplot2)
library(gt)
library(webshot2)
library(fs)
library(dplyr)
```


Load the data.

```{r}
#Path to data. Note the use of the here() package and not absolute paths
data_location <- here::here("data","processed-data","processeddata.rds")
#load data
mydata <- readRDS(data_location)
```

Generate a summary of the dataset using the skimr package and print it for review.  The summary provides key statistics such as missing values, variable types, and distributions. The output is saved as an RDS file in the "results/edatables/" directory.  The prefix "eda" in the filename helps distinguish exploratory analysis files from final analysis outputs.  Storing the summary table allows for future reference without the need to rerun the analysis.  

```{r}
summary_df = skimr::skim(mydata)
print(summary_df)
# save to file
summarytable_file = here("results", "edatables", "edasummarytable.rds")
saveRDS(summary_df, file = summarytable_file)
```
```{r}
# Publication ready-table
# Get skim summary
summary_df <- skim(mydata)

# Filter only for survival_months (numeric type)
surv_summary <- summary_df %>%
  filter(skim_variable == "survival_months") %>%
  select(
    Variable = skim_variable,
    Completeness = complete_rate,
    Mean = numeric.mean,
    SD = numeric.sd,
    Min = numeric.p0,
    Q1 = numeric.p25,
    Median = numeric.p50,
    Q3 = numeric.p75,
    Max = numeric.p100
  )


# Format using GT
surv_summary_gt <- surv_summary %>%
  gt() %>%
  tab_header(title = md("**Table 2: Summary of Survival Months**")) %>%
  fmt_number(columns = where(is.numeric), decimals = 2) %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels(everything())
  ) %>%
  opt_table_font(font = list(google_font("Roboto"), default_fonts())) %>%
  tab_options(
    table.font.size = 11,
    heading.title.font.size = 13,
    table_body.hlines.color = "gray90",
    table.border.top.color = "gray80",
    table.border.bottom.color = "gray80",
    row.striping.include_table_body = TRUE,
    data_row.padding = px(4),
    table.align = "center"
  ) %>%
  opt_row_striping() %>%
  tab_source_note(md("*Note:* Summary based on numeric variable `survival_months`."))

# Display the table 
surv_summary_gt

# Save GT object and PNG
saveRDS(surv_summary_gt, here("results", "edatables", "edasurvivalmonths_table_gt.rds"))

# Ensure image folder exists
dir_create(here("results", "edafigures"))

# Save as PNG
gtsave(surv_summary_gt,
       filename = here("results", "edafigures", "edasurvivalmonths_table.png"),
       vwidth = 1000, vheight = 600, zoom = 2)
```



```{r}
# Create a structured summary table
var_summary <- mydata %>%
  summarise_all(class) %>%
  pivot_longer(cols = everything(), names_to = "Variable", values_to = "Type") %>%
  mutate(Unique_Values = sapply(mydata, function(x) length(unique(x))),
         Missing_Values = sapply(mydata, function(x) sum(is.na(x))))

# Print the table to verify
print(var_summary)

# Save the structured table in a readable format
summarytable_file = here("results", "edatables", "edasummarytable2.rds")
saveRDS(var_summary, file = summarytable_file)
```
```{r}
# Create publication-ready table
var_summary_gt <- var_summary %>%
  gt() %>%
  tab_header(
    title = md("**Table 1: Variable Summary**")
  ) %>%
  cols_label(
    Variable = "Variable Name",
    Type = "Data Type",
    Unique_Values = "Unique Values",
    Missing_Values = "Missing Values"
  ) %>%
  fmt_number(
    columns = vars(Unique_Values, Missing_Values),
    decimals = 0
  ) %>%
  tab_options(
    table.font.size = "small",
    heading.title.font.size = 12,
    data_row.padding = px(4),
    table.align = "center"
  )

# Display the table
var_summary_gt

# Save the GT table object to RDS
summarytable_file_gt <- here("results", "edatables", "edasummarytable2_gt.rds")
# Save table as GT object (already done)
saveRDS(var_summary_gt, file = here("results", "edatables", "edasummarytable2_gt.rds"))

# ALSO save as high-resolution PNG
gtsave(var_summary_gt,
       filename = here("results", "edafigures", "summarytable.png"),
       vwidth = 1200, vheight = 800, zoom = 2)

```

I am exploring the variable age first with the table

```{r}
# Summary of Age recode variable (categorical)
p1 <- mydata %>%
  group_by(`age_group`) %>%
  summarise(Count = n()) 

# Print the summary table
print(p1)

# Save the summary table
summarytable_file = here("results", "edatables", "edaagesummary.rds")
saveRDS(p1, file = summarytable_file)

```
```{r}
# Generate summary Publication ready table for age_group
p1 <- mydata %>%
  group_by(age_group) %>%
  summarise(Count = n(), .groups = "drop")

# Style it using gt
age_summary_gt <- p1 %>%
  gt() %>%
  tab_header(
    title = md("**Table 3: Distribution of Age Groups**")
  ) %>%
  cols_label(
    age_group = "Age Group",
    Count = "Number of Patients"
  ) %>%
  fmt_number(columns = Count, decimals = 0) %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels(everything())
  ) %>%
  opt_row_striping() %>%
  opt_table_font(font = list(google_font("Roboto"), default_fonts())) %>%
  tab_options(
    table.font.size = 11,
    heading.title.font.size = 13,
    data_row.padding = px(4),
    table.align = "center",
    table_body.hlines.color = "gray90",
    table.border.top.color = "gray80",
    table.border.bottom.color = "gray80"
  ) %>%
  tab_source_note(md("*Note:* This table summarizes the distribution of patients by age group."))

# Show in EDA HTML output
age_summary_gt

# Save raw table
saveRDS(p1, here("results", "edatables", "edaagesummary.rds"))

# Save styled table
saveRDS(age_summary_gt, here("results", "edatables", "edaagesummary_gt.rds"))

# Ensure folder exists and save PNG
dir_create(here("results", "edafigures"))

gtsave(age_summary_gt,
       filename = here("results", "edafigures", "edaagesummary.png"),
       vwidth = 800, vheight = 500, zoom = 2)
```

Now lets look at the bar plot for age distribution 

```{r}
# Bar plot for Age recode distribution (categorical)
p2 <- mydata %>%
  ggplot(aes(x = `age_group`)) + 
  geom_bar(fill = "skyblue") + 
  labs(title = "Age Distribution (Categorical)", x = "Age Group", y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels for readability

# Display the plot
plot(p2)

# Save the plot
figure_file = here("results", "edafigures", "edaagedistribution.png")
ggsave(filename = figure_file, plot = p2)

```
Now, exploring the Race recode (W, B, AI, API) variable

```{r}
# Summary of Race recode variable (categorical)
# - Groups the dataset by the "Race recode (W, B, AI, API)" variable.
# - Counts the number of observations in each race category.
p3 <- mydata %>%
  group_by(`race`) %>%
  summarise(Count = n())

# Print the summary table
print(p3)

# Save the summary table
# - Stored in "results/edatables/" with the prefix "eda" to indicate exploratory analysis.
summarytable_file = here("results", "edatables", "edaracesummary.rds")
saveRDS(p3, file = summarytable_file)
```
```{r}
# Bar plot for Race recode distribution (categorical)
# - Visualizes the distribution of race categories.
# - Uses "skyblue" fill for better readability.
p4 <- mydata %>%
  ggplot(aes(x = race)) + 
  geom_bar(fill = "skyblue") + 
  labs(title = "Race Distribution", x = "Race Category", y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotates x-axis labels for better readability

# Display the plot
plot(p4)

# Save the plot
# - Stored in "results/edafigures/" with the prefix "eda" to indicate exploratory analysis.
figure_file = here("results", "edafigures", "edaracedistribution.png")
ggsave(filename = figure_file, plot = p4)

```
Now exploring Year of Diagnosis 
```{r}
# Summary of Year of Diagnosis variable (categorical)
# - Groups the dataset by "Year of diagnosis" and counts occurrences.
p5 <- mydata %>%
  group_by(diagnosis_year) %>%
  summarise(Count = n())

# Print the summary table
print(p5)

# Save the summary table
# - Stored in "results/edatables/" with the prefix "eda" to indicate exploratory analysis.
summarytable_file = here("results", "edatables", "edayearsummary.rds")
saveRDS(p5, file = summarytable_file)

```
```{r}
# Bar plot for Year of Diagnosis distribution (categorical)
# - Visualizes the distribution of diagnosis years.
# - Uses "skyblue" fill for better readability.
p6 <- mydata %>%
  ggplot(aes(x = factor(diagnosis_year))) +  # Treat as categorical
  geom_bar(fill = "skyblue") + 
  labs(title = "Year of Diagnosis Distribution", x = "Year", y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotates x-axis labels for better readability

# Display the plot
plot(p6)

# Save the plot
# - Stored in "results/edafigures/" with the prefix "eda" to indicate exploratory analysis.
figure_file = here("results", "edafigures", "edayear.png")
ggsave(filename = figure_file, plot = p6)

```
Now, lets explore SEER Combined Mets at DX (Bone, Brain, Liver, Lung, and Distant LN) using p7 for the summary table and p8 for the bar plot

```{r}
# Summary of SEER Combined Mets at DX variables (categorical)
# - Groups data by metastasis categories and counts occurrences.
p7 <- mydata %>%
  summarise(
    Bone_Mets = sum(mets_bone == "Yes", na.rm = TRUE),
    Brain_Mets = sum(mets_brain == "Yes", na.rm = TRUE),
    Liver_Mets = sum(mets_liver == "Yes", na.rm = TRUE),
    Lung_Mets = sum(mets_lung == "Yes", na.rm = TRUE),
      ) %>%
  pivot_longer(cols = everything(), names_to = "Metastasis_Site", values_to = "Count")

# Print the summary table
print(p7)

# Save the summary table
# - Stored in "results/edatables/" with the prefix "eda" to indicate exploratory analysis.
summarytable_file = here("results", "edatables", "edametsatsummary.rds")
saveRDS(p7, file = summarytable_file)


```
```{r}
#Publication ready table 
# Generate clean summary of SEER Combined Mets at Diagnosis
# Clean and relabel the metastasis site names
p7 <- mydata %>%
  summarise(
    Bone_Mets  = sum(mets_bone == "Yes", na.rm = TRUE),
    Brain_Mets = sum(mets_brain == "Yes", na.rm = TRUE),
    Liver_Mets = sum(mets_liver == "Yes", na.rm = TRUE),
    Lung_Mets  = sum(mets_lung == "Yes", na.rm = TRUE)
  ) %>%
  pivot_longer(cols = everything(), names_to = "Metastasis_Site", values_to = "Count") %>%
  mutate(Metastasis_Site = case_when(
    Metastasis_Site == "Bone_Mets"  ~ "Bone Metastasis",
    Metastasis_Site == "Brain_Mets" ~ "Brain Metastasis",
    Metastasis_Site == "Liver_Mets" ~ "Liver Metastasis",
    Metastasis_Site == "Lung_Mets"  ~ "Lung Metastasis"
  ))

# Format the GT table
mets_summary_gt <- p7 %>%
  gt() %>%
  tab_header(title = md("**Table 4: Metastasis at Diagnosis by Site**")) %>%
  cols_label(
    Metastasis_Site = "Site",
    Count = "Number of Patients"
  ) %>%
  fmt_number(columns = Count, decimals = 0) %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels(everything())
  ) %>%
  opt_table_font(font = list(google_font("Roboto"), default_fonts())) %>%
  opt_row_striping() %>%
  tab_options(
    table.font.size = 11,
    heading.title.font.size = 13,
    data_row.padding = px(4),
    table.align = "center",
    table_body.hlines.color = "gray90",
    table.border.top.color = "gray80",
    table.border.bottom.color = "gray80"
  ) %>%
  tab_source_note(md("*Note:* This table summarizes the number of patients with bone, brain, liver, or lung metastases at diagnosis."))

# Show in EDA output
mets_summary_gt

# Save RDS versions
saveRDS(p7, here("results", "edatables", "edametsatsummary.rds"))
saveRDS(mets_summary_gt, here("results", "edatables", "edametsatsummary_gt.rds"))

# Save PNG version for manuscript
dir_create(here("results", "edafigures"))

gtsave(mets_summary_gt,
       filename = here("results", "edafigures", "edametsatsummary.png"),
       vwidth = 900, vheight = 600, zoom = 2)
```


```{r}
# Bar plot for SEER Combined Mets at DX distribution
# - Visualizes the number of occurrences for each metastasis type.
# - Uses "skyblue" fill for better readability.
p8 <- p7 %>%
  ggplot(aes(x = Metastasis_Site, y = Count, fill = Metastasis_Site)) + 
  geom_bar(stat = "identity") + 
  labs(title = "Metastasis at Diagnosis Distribution", x = "Metastasis Site", y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  guides(fill = "none")  # Removes legend since it's redundant

# Display the plot
plot(p8)

# Save the plot
# - Stored in "results/edafigures/" with the prefix "eda" to indicate exploratory analysis.
figure_file = here("results", "edafigures", "edametsatdxdistribution.png")
ggsave(filename = figure_file, plot = p8)

```
Now, lets explore SEER cause-specific death classification

```{r}
# Summary of SEER Cause-Specific Death Classification variable (categorical)
# - Counts the number of occurrences for each cause-specific death classification category.
# - Also calculates the percentage for each category.
p9 <- mydata %>%
  group_by(cause_specific_death) %>%
  summarise(Count = n(), .groups = "drop") %>%
  mutate(Percentage = round((Count / sum(Count)) * 100, 1))

# Print the summary table
print(p9)

# Save the summary table
# - Stored in "results/edatables/" with the prefix "eda" to indicate exploratory analysis.
summarytable_file = here("results", "edatables", "edacausedeathsummary.rds")
saveRDS(p9, file = summarytable_file)

```


```{r}
# Bar plot for SEER Cause-Specific Death Classification distribution
# - Visualizes the distribution of cause-specific death classification.
p10 <- p9 %>%
  ggplot(aes(x =cause_specific_death, y = Count, fill = cause_specific_death)) + 
  geom_bar(stat = "identity") + 
  labs(title = "SEER Cause-Specific Death Classification", x = "Cause-Specific Death Category", y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  guides(fill = "none")  # Removes legend since x-axis labels already describe the categories

# Display the plot
plot(p10)

# Save the plot
# - Stored in "results/edafigures/" with the prefix "eda" to indicate exploratory analysis.
figure_file = here("results", "edafigures", "edacausedeathdistribution.png")
ggsave(filename = figure_file, plot = p10)

```
Now, lets explore Survival Months


```{r}
# Summary of Survival Months variable (continuous)
# - Computes descriptive statistics for survival months.
p11 <- mydata %>%
  summarise(
    Min_Survival = min(survival_months, na.rm = TRUE),
    Max_Survival = max(survival_months, na.rm = TRUE),
    Mean_Survival = mean(survival_months, na.rm = TRUE),
    Median_Survival = median(survival_months, na.rm = TRUE),
    SD_Survival = sd(survival_months, na.rm = TRUE),
    Count = n()
  )

# Print the summary table
print(p11)

# Save the summary table
# - Stored in "results/edatables/" with the prefix "eda" to indicate exploratory analysis.
summarytable_file = here("results", "edatables", "edasurvivalmonthssummary.rds")
saveRDS(p11, file = summarytable_file)

```
```{r}
# Histogram for Survival Months distribution
# - Visualizes the distribution of survival months.
p12 <- mydata %>%
  ggplot(aes(x = survival_months)) + 
  geom_histogram(binwidth = 5, fill = "skyblue", color = "black") + 
  labs(title = "Survival Months Distribution", x = "Survival Months", y = "Count") +
  theme_minimal()

# Display the plot
plot(p12)

# Save the plot
# - Stored in "results/edafigures/" with the prefix "eda" to indicate exploratory analysis.
figure_file = here("results", "edafigures", "edasurvivalmonthsdistribution.png")
ggsave(filename = figure_file, plot = p12)

```



